name: vertx-infinispan-jgroups-ci

on: push

jobs:
  test:
    name: Running Maven Tests

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Executing Maven Tests
      run: mvn clean test

  deploy:
    name: Deploying Project To Openshift Online

    runs-on: ubuntu-latest

    needs: test

    env:
      OPENSHIFT_TOKEN: ${{secrets.OpenshiftToken}}
      OPENSHIFT_SERVER_URL: ${{secrets.OpenshiftServerUrl}}

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Downloading OC...
        run: curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz -o oc.tar.gz
      - name: Extracting...
        run: tar xvzf oc.tar.gz
      - name: Configuring Openshift CLI
        run: ./oc login --token=$OPENSHIFT_TOKEN --server=$OPENSHIFT_SERVER_URL
      - name: List Files
        run: ls
      - name: Configuring Project
        run: ./scripts/deploy.sh
      - name: Build with Maven
        run: mvn clean fabric8:deploy
